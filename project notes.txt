notes on shower clearing draw analysis
2017-11-27

Start with Cal_Events.accdb, since I have it.
Turn it into csv files 
./access2csv.sh '/home/jiml/HotWaterResearch/projects/CECHWT24/hot water calcs/draw patterns/Aquacraft/Cal_Events.accdb'

Trying RODBC first. had to 
  $ sudo apt-get install unixodbc unixodbc-dev
first.
Had to chmod +777 a directory to get the installation to work
Can't find an open-source driver for .accdb files.

Downloaded access2csv.jar from https://github.com/AccelerationNet/access2csv/releases

Used access2csv.jar directly. 

2017-11-29
start flowchart file for this analysis

The resolution on flow rates probably means that Mode in the Aquacraft datasets is missing many of the intervals that are part of the actual shower.

See if I still have a copy of the raw data from REUWS I to analyze.


found copies of .mdb files from Aquacraft Seattle and EBMUD hot water studies
used mdb-tools to get into them
see: Liberating data from Microsoft Access “.mdb” files
        http://mazamascience.com/WorkingWithData/?p=168
    mdb-tables -1 'Seattle end use data.mdb' 
    mdb-schema 'Seattle end use data.mdb'
the .mdb files are results of queries on the raw data
Tables named 'LOGGING DATA *' are the events databases from the raw data.

In the .tdb files there's a table 'Flows'

CREATE TABLE [Flows]
 (
	[ID]			Long Integer, 
	[EventID]			Long Integer NOT NULL, 
	[StartTime]			DateTime NOT NULL, 
	[Rate]			Single NOT NULL
);

mdb-export '13197tst.tdb' 'Flows'

ID,EventID,StartTime,Rate
1,1,"10/25/99 12:58:59",1.00000001e-01
2,2,"10/25/99 12:59:49",5.00000007e-02
3,2,"10/25/99 12:59:59",1.00000001e-01
4,2,"10/25/99 13:00:09",1.59999996e-01
5,2,"10/25/99 13:00:19",9.99999978e-03
6,2,"10/25/99 13:00:29",9.99999978e-03
7,2,"10/25/99 13:00:39",9.99999978e-03
8,2,"10/25/99 13:00:49",9.99999978e-03
9,3,"10/25/99 13:02:49",2.09999993e-01

And a table 'Events'

CREATE TABLE [Events]
 (
	[ID]			Long Integer, 
	[StartTime]			DateTime NOT NULL, 
	[EndTime]			DateTime NOT NULL, 
	[Duration]			Long Integer NOT NULL, 
	[Class]			Integer NOT NULL, 
	[Peak]			Single NOT NULL, 
	[Volume]			Single NOT NULL, 
	[Mode]			Single NOT NULL, 
	[ModeFreq]			Long Integer NOT NULL
);

$ mdb-export '13197tst.tdb' 'Events' | head
ID,StartTime,EndTime,Duration,Class,Peak,Volume,Mode,ModeFreq
1,"10/25/99 12:58:59","10/25/99 12:59:09",10,2,1.00000001e-01,1.99999996e-02,1.00000001e-01,1
2,"10/25/99 12:59:49","10/25/99 13:00:59",70,2,1.59999996e-01,5.99999987e-02,9.99999978e-03,4
3,"10/25/99 13:02:49","10/25/99 13:02:59",10,2,2.09999993e-01,3.99999991e-02,2.09999993e-01,1
4,"10/25/99 13:02:59","10/25/99 13:03:39",40,3,1.87000000e+00,5.69999993e-01,1.87000000e+00,1
5,"10/25/99 13:03:39","10/25/99 13:03:49",10,2,2.09999993e-01,3.99999991e-02,2.09999993e-01,1
6,"10/25/99 13:03:49","10/25/99 13:04:59",70,3,4.61999989e+00,3.72000003e+00,4.61999989e+00,2
7,"10/25/99 13:27:19","10/25/99 13:28:29",70,3,1.71000004e+00,1.58000004e+00,1.71000004e+00,5
8,"10/25/99 13:28:29","10/25/99 13:30:49",140,2,9.99999978e-03,1.99999996e-02,9.99999978e-03,14
9,"10/25/99 13:30:49","10/25/99 13:32:09",80,3,8.92000008e+00,8.52000046e+00,8.92000008e+00,3

Class is probably type. Can probably decode from the 'LOGGING DATA *' tables in the ../.mdb files

$ mdb-export 'db1.mdb' 'LOGGING DATA 2' | head -n 5
KEYCODE,USETYPE,DATE,START,DURATION,END,PEAK,VOLUME,MODE,MODE NO
13191,"LEAK","03/24/00 00:00:00","03/24/00 01:46:21",20,"03/24/00 01:46:41",1.00000001e-01,2.99999993e-02,1.00000001e-01,"1"
13191,"LEAK","03/24/00 00:00:00","03/24/00 02:04:31",80,"03/24/00 02:05:51",9.99999978e-03,9.99999978e-03,9.99999978e-03,"8"
13191,"LEAK","03/24/00 00:00:00","03/24/00 02:27:21",90,"03/24/00 02:28:51",5.00000007e-02,1.99999996e-02,9.99999978e-03,"8"
13191,"LEAK","03/24/00 00:00:00","03/24/00 03:11:01",10,"03/24/00 03:11:11",1.00000001e-01,1.99999996e-02,1.00000001e-01,"1"

Figure out what Class corresponds to SHOWER, then extract just those from the *.tdb files.
Plot a bunch shower events, see if it's possible to come up with an expanded mode. mode +/- 0.2 GPM maybe?

2017-12-01

Using mdbviewer to manually scan data, seems like same KEYCODE is used in pre

from /home/jiml/HotWaterResearch/projects/hwds/shower_clearing_draw/data/AQSE/0.original.data/db1.mdb
table = LOGGING DATA 1 
    KEYCODE =13191
    USETYPE = SHOWER
    START   = 11/05/1999 02:17:32
is no file 13191*.tdb    ?

In file 
/home/jiml/HotWaterResearch/projects/hwds/shower_clearing_draw/data/AQSE/0.original.data/Pre Retrofit/13197hwtst.tdb
table = Flows
    ID, EventID, StartTime, Rate
table = Events    
    ID, StartTime, EndTime, Duration, Class, Peak, Volume, Mode, ModeFreq
    ID in Events table corresponds to EventID in Flows table.
    
Will have to open up 
/home/jiml/HotWaterResearch/projects/hwds/shower_clearing_draw/data/AQSE/0.original.data/Seattle end use data.mdb
MDB file viewer doesn't let me see enough records to find one to correlate USETYPE to Class.   

Simplify and prune the Aquacraft data folders.    
    
Spent a lot of time wrasseling with getting a database into a data.table
to find that class wasn't a key for USETYPE.

Go back and make a function to export at table to a temporary *.csv file,
read.csv into a data.table and delete the temporary file.

Then search for showers in 'LOGGING DATA {1|2|3} {|Hot Water}' tables in 
EBMUD Retrofit Database.mdb.

Then search for those times in 'Events' tables in 
./{Pre Retrofit|Post Retrofit 1|Post Retrofit 2}/"KEYCODE"*.tdb 
Then pull out the interval data from the 'Flows' tables in the same *.tdb

Maybe it would be better to read in all the shower data from the tables and save to
*.RData tables, like for curate_field_data project, then work from the .RData files

Calibrate times between hot water and total water by end of showers?

2017-12-04

develop a function to read a data table from access database


2017-12-05

use get_table function to get shower data out of 
/home/jiml/HotWaterResearch/projects/hwds/shower_clearing_draw/data/Aquacraft/EBMUD/EBMUD Retrofit Database.mdb

then count number of overlapping events for each shower

2017-12-11

get shower data (keycode, start, end, number overlaps) for all showers both EBMUD & Seattle

made a function to count the coincident events while showers are running. Applied to EBMUD data.
Found 3 events with dates from 12/30/99 which were too early and got translated as 1899-12-30.
Just drop those events for now.

2017-12-14

include study {EBMUD,Seattle}, logging {1, 2, 3 }, and meter {total, water heater}

got them all, need to clean up DT_showers.RData before going after the interval data.

2017-12-18

winnowed out showers that aren't in both the logging and interval databases. initial look at hot vs total

next steps? 
    X   keep only ones that can identify both hot and total
    make a new interval data file for each shower by study logging meter KEYCODE
    synchronize times by minimizing difference in end times hot and total 
        by study, logging and KEYCODE

2017-12-21
    next steps 
        function to chart total and hot vs time given a shower by SLK & times

2018-01-08
    imported plot_GPMkWh from CECHWT24/scripts/functions.R
    started to modify it to deal w/ Aquacraft data
    refactor GPM to 'total water' and kWh to 'hot water'?
    
2018-01-12
    Also think about shower waste calculated from TraceWizard parameters to what see with charts.    
   
2018-01-16
    think about aggregating showers to make sure we've got real, complete data
    not to worry about time synch and tag ends of partial time intervals yet
    goal is to make algorithm to calculate actual waste volume from shower time stream
    don't even need to worry about hot, but helps people understand.
    Latin hypercube of shower volume, duration, & ? to look at full range of sample shower datastreams
    
    for now redo shower_matching.R to consolidate individual showers in both hot & total
    
    For s='Seattle', l=2, k=13219 looks like hot is about 10 minutes behind total. Not all showers look like showers.
    nshower total and hot don't correspond. 
    2 problems, synchronize clocks total & hot
    then harmonize shower count by numbering showers by start & end times
    
    could synchronize times by end time of shower? What about misidentified or extraneous events?
    drop them. 
    
2018-02-06
    updated Rstudio
    new script to compare ends of total and hot showers within a slk?
    
    would also make sense to look at histogram of count of intervals by flow to identify waste & shower
    
2018-02-13
    identify ends of showers, hot & total
    use total as reference
    for each end-of-shower in total find prev.end-of-hot and next.end-of-hot
    find offset.prev.end-of-hot and offset.next.end-of-hot
    look at which offsets have the tightest, highest cluster. that is how much to offset hot time
    ones with offsets in cluster have a mate, showers w/o should be dropped
    do this all within slk
    
2018-02-16
    ask Bill DeOreo for REUWS1 & REUWSII shower interval data
    
    after looking at some charts, see about plotting only shower interval data
    will require digging into interval data and subtracting coincident draws
    slk 'Seattle', l=2, k=13197 seems to pretty well synchronized,
    however it looks like it might be a pressure-balancing valve not a thermostatic valve
    can only see clearing and showering signature in the hot

2018-03-01
    emailed Bill yesterday, no response yet
    
    think about collecting only shower interval data?
    
    Aquacraft data doesn't easily allow splitting interval data among coincident events.
    possible to use start and end times of coinicident events to average shower data from the intervals before and after the event?
    Look for showers with coincident events that occur early in the recording interval. The 'MDB File Viewer' (gmdb2) only show the first 1000 records.
    Will have to do separately for total & hot?
        
2018-03-02
    for now just collect the shower interval data, 
    keep number of coincident events, no need to that's already in the DT_ file
    
    Here's one with lot's of coincident draws to use later as a test case
        s='Seattle' 
        l=2 
        k=13197 
        t1="2000-03-26 18:21:00"
        t2="2000-03-26 18:50:00"
        plot_shower(s, l, k, DT=DT_shower_interval4, t1, t2,)

    got an ugly loop to identify shower intervals in one slkm.
    sometimes duplicate records with same time in DT_tw_flows

    
2018-03-08
    work on collecting shower interval data 
    ideas on identifying clearing vs shower using plateaus in sorted by GPM?
    id coincident draws using difference data? on 2-interval running averages?
    
    reduced time of loop to collect shower intervals by almost 50%
    
    Flows table has some records with same StartTime, different Rate, EventID and ID
    ID seems to be sequential number of the record
    what's EventID?
    
2018-03-12
    interogate the .tdb files to figure out which intervals are showers.
    ./shower_clearing_draw/data/Aquacraft/EBMUD/Post Retrofit 2/22027.tdb
    contains the following tables:
        Flows
            ID
            EventID
            StartTime
            Rate
        EventFixtures
            ID
            IDEvent
            IDFixture
            Preserved
        Events
            ID
            StartTime
            EndTime
            Duration
            Class
            Peak
            Volume
            Mode
            ModeFreq
        VirtualFixtures
            
        Parameters
        Fixtures
     
     USETYPE is only in the LOGGING DATA tables from 
     /home/jiml/HotWaterResearch/projects/hwds/shower_clearing_draw/data/Aquacraft/EBMUD/EBMUD Retrofit Database.mdb
     and
     /home/jiml/HotWaterResearch/projects/hwds/shower_clearing_draw/data/Aquacraft/Seattle/Seattle end use data.mdb
     
2018-03-13
    use from Flows to figure out fixture       
       
    Flows$EventID = EventFixtures$IDEvent
        EventFixtures$IDFixture = Fixtures$ID
            Fixtures$Name == Shower
    So with 2 merges, should be able to get Name into Flows
    
    try it in on one sklm
    Got it to work. Plots seem plausible, but will be hard to split clearing/showering
    Plot to show only shower or coincident draws diff color?
    Next make function and apply to all showers
    
2018-03-14
    make function to add Name to Flows for one sklm
    then use it in collect_shower_intervals.R 
    
    used decode_EventID.R to make function to Name Flows
    tested on s='Seattle'; k=13431; l=1; m='total water'
    none of the 3 random showers looked normal.

2018-03-15
    new version of R
        got latest version R-3.4.4.tar.gz from https://cran.r-project.org/sources.html   
        untar the R source code, tar -xvf R-3.4.4.tar.gz
        https://cran.r-project.org/doc/FAQ/R-FAQ.html#How-can-R-be-installed-_0028Unix_002dlike_0029
    https://support.rstudio.com/hc/en-us/articles/218004217-Building-R-from-source
    gave up for today after a couple hours
    
    collected Aquacraft's shower Flows data to ./data/DT_shower_Flows.RData
   
2018-03-16
    build a new function to chart just the shower intervals.        
    
2018-03-17
    new version of R, R version 3.4.4 (2018-03-15), auto-installed this morning
    made dspan() function for pretty x-axis time data
    looked at some showers
    clocks lagged for s='Seattle'; k=13431; l=1; m='hot water' and
    more by end of logging dates.
    found some clean & dirty showers.

    
    try incremental reverse flow average and variance to see if end of clearing draw shows up
    look at shift()? to make a matrix?
    nah
    
    try this
    test to find best fit of Y = Y1 ave(y) for t<= t1 & Y2 for t > t1
    then showering duration  is tn-t1 and showering rate is Y2
    
    got way to find index of last of the clearing draw.
    calc aveRate from next Rate to a couple records short of end, to avoid tapering off
    
    calc duration as vol / aveRate
    where vol = sum(Rate)*1/6, summed to include the tapering off.  
    
    Maybe figure out how to plot best fit on chart as well.
    
2018-03-30

    reviewed build_find_shower and improved documentation slightly    
    